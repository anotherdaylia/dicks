<object-stream>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>4</type>
  <activationId>Explode Package [1]</activationId>
  <rule>Explode Package</rule>
  <declarations>$p=[newOne, a](1)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>4</type>
  <activationId>for splitable packages [1]</activationId>
  <rule>for splitable packages</rule>
  <declarations>$p=[newOne, a](1)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>4</type>
  <activationId>add splits [1]</activationId>
  <rule>add splits</rule>
  <declarations>$p=[newOne, a](1)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ObjectLogEvent>
  <type>1</type>
  <factId>1</factId>
  <objectToString>[newOne, a]</objectToString>
</org.drools.core.audit.event.ObjectLogEvent>
<org.drools.core.audit.event.ObjectLogEvent>
  <type>1</type>
  <factId>2</factId>
  <objectToString>: 1</objectToString>
</org.drools.core.audit.event.ObjectLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>6</type>
  <activationId>Explode Package [1]</activationId>
  <rule>Explode Package</rule>
  <declarations>$p=[newOne, a](1)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>7</type>
  <activationId>Explode Package [1]</activationId>
  <rule>Explode Package</rule>
  <declarations>$p=[newOne, a](1)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>6</type>
  <activationId>for splitable packages [1]</activationId>
  <rule>for splitable packages</rule>
  <declarations>$p=[newOne, a](1)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>4</type>
  <activationId>generate test results [3, 1, 4]</activationId>
  <rule>generate test results</rule>
  <declarations>$stores=[: 1](4); $test=Package test: [[Parcel: [newOne (1) a (1) ]]](3); $pack=[newOne, a](1)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ObjectLogEvent>
  <type>1</type>
  <factId>3</factId>
  <objectToString>Package test: [[Parcel: [newOne (1) a (1) ]]]</objectToString>
</org.drools.core.audit.event.ObjectLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>7</type>
  <activationId>for splitable packages [1]</activationId>
  <rule>for splitable packages</rule>
  <declarations>$p=[newOne, a](1)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>6</type>
  <activationId>generate test results [3, 1, 4]</activationId>
  <rule>generate test results</rule>
  <declarations>$stores=[: 1](4); $test=Package test: [[Parcel: [newOne (1) a (1) ]]](3); $pack=[newOne, a](1)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ObjectLogEvent>
  <type>2</type>
  <factId>3</factId>
  <objectToString>Package test: [[Parcel: [newOne (1) a (1) ]]]</objectToString>
</org.drools.core.audit.event.ObjectLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>7</type>
  <activationId>generate test results [3, 1, 4]</activationId>
  <rule>generate test results</rule>
  <declarations>$stores=[: 1](4); $test=Package test: [[Parcel: [newOne (1) a (1) ]]](3); $pack=[newOne, a](1)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>6</type>
  <activationId>add splits [1]</activationId>
  <rule>add splits</rule>
  <declarations>$p=[newOne, a](1)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>4</type>
  <activationId>Explode Package [1]</activationId>
  <rule>Explode Package</rule>
  <declarations>$p=[newOne, a](1)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>4</type>
  <activationId>for splitable packages [1]</activationId>
  <rule>for splitable packages</rule>
  <declarations>$p=[newOne, a](1)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>4</type>
  <activationId>add splits [1]</activationId>
  <rule>add splits</rule>
  <declarations>$p=[newOne, a](1)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ObjectLogEvent>
  <type>2</type>
  <factId>1</factId>
  <objectToString>[newOne, a]</objectToString>
</org.drools.core.audit.event.ObjectLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>7</type>
  <activationId>add splits [1]</activationId>
  <rule>add splits</rule>
  <declarations>$p=[newOne, a](1)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>6</type>
  <activationId>Explode Package [1]</activationId>
  <rule>Explode Package</rule>
  <declarations>$p=[newOne, a](1)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>7</type>
  <activationId>Explode Package [1]</activationId>
  <rule>Explode Package</rule>
  <declarations>$p=[newOne, a](1)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>6</type>
  <activationId>for splitable packages [1]</activationId>
  <rule>for splitable packages</rule>
  <declarations>$p=[newOne, a](1)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>4</type>
  <activationId>generate test results [5, 1, 6]</activationId>
  <rule>generate test results</rule>
  <declarations>$stores=[: 1](6); $test=Package test: [[Parcel: [newOne (1) ], Parcel: [a (1) ]]](5); $pack=[newOne, a](1)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ObjectLogEvent>
  <type>1</type>
  <factId>5</factId>
  <objectToString>Package test: [[Parcel: [newOne (1) ], Parcel: [a (1) ]]]</objectToString>
</org.drools.core.audit.event.ObjectLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>7</type>
  <activationId>for splitable packages [1]</activationId>
  <rule>for splitable packages</rule>
  <declarations>$p=[newOne, a](1)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>6</type>
  <activationId>generate test results [5, 1, 6]</activationId>
  <rule>generate test results</rule>
  <declarations>$stores=[: 1](6); $test=Package test: [[Parcel: [newOne (1) ], Parcel: [a (1) ]]](5); $pack=[newOne, a](1)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ObjectLogEvent>
  <type>2</type>
  <factId>5</factId>
  <objectToString>Package test: [[Parcel: [newOne (1) ], Parcel: [a (1) ]]]</objectToString>
</org.drools.core.audit.event.ObjectLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>7</type>
  <activationId>generate test results [5, 1, 6]</activationId>
  <rule>generate test results</rule>
  <declarations>$stores=[: 1](6); $test=Package test: [[Parcel: [newOne (1) ], Parcel: [a (1) ]]](5); $pack=[newOne, a](1)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>6</type>
  <activationId>add splits [1]</activationId>
  <rule>add splits</rule>
  <declarations>$p=[newOne, a](1)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>4</type>
  <activationId>Explode Package [1]</activationId>
  <rule>Explode Package</rule>
  <declarations>$p=[newOne, a](1)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>4</type>
  <activationId>for not splitable packages [1]</activationId>
  <rule>for not splitable packages</rule>
  <declarations>$p=[newOne, a](1)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ObjectLogEvent>
  <type>2</type>
  <factId>1</factId>
  <objectToString>[newOne, a]</objectToString>
</org.drools.core.audit.event.ObjectLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>7</type>
  <activationId>add splits [1]</activationId>
  <rule>add splits</rule>
  <declarations>$p=[newOne, a](1)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>6</type>
  <activationId>Explode Package [1]</activationId>
  <rule>Explode Package</rule>
  <declarations>$p=[newOne, a](1)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>7</type>
  <activationId>Explode Package [1]</activationId>
  <rule>Explode Package</rule>
  <declarations>$p=[newOne, a](1)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>6</type>
  <activationId>for not splitable packages [1]</activationId>
  <rule>for not splitable packages</rule>
  <declarations>$p=[newOne, a](1)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>4</type>
  <activationId>Explode Package [1]</activationId>
  <rule>Explode Package</rule>
  <declarations>$p=[newOne, a](1)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>4</type>
  <activationId>get to evaluate [1]</activationId>
  <rule>get to evaluate</rule>
  <declarations>$p=[newOne, a](1)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>4</type>
  <activationId>evaluate package results [1, 7]</activationId>
  <rule>evaluate package results</rule>
  <declarations>$results=[](7); $p=[newOne, a](1)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ObjectLogEvent>
  <type>2</type>
  <factId>1</factId>
  <objectToString>[newOne, a]</objectToString>
</org.drools.core.audit.event.ObjectLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>7</type>
  <activationId>for not splitable packages [1]</activationId>
  <rule>for not splitable packages</rule>
  <declarations>$p=[newOne, a](1)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>6</type>
  <activationId>Explode Package [1]</activationId>
  <rule>Explode Package</rule>
  <declarations>$p=[newOne, a](1)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>7</type>
  <activationId>Explode Package [1]</activationId>
  <rule>Explode Package</rule>
  <declarations>$p=[newOne, a](1)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>6</type>
  <activationId>get to evaluate [1]</activationId>
  <rule>get to evaluate</rule>
  <declarations>$p=[newOne, a](1)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>7</type>
  <activationId>get to evaluate [1]</activationId>
  <rule>get to evaluate</rule>
  <declarations>$p=[newOne, a](1)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>6</type>
  <activationId>evaluate package results [1, 7]</activationId>
  <rule>evaluate package results</rule>
  <declarations>$results=[](7); $p=[newOne, a](1)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
<org.drools.core.audit.event.ActivationLogEvent>
  <type>7</type>
  <activationId>evaluate package results [1, 7]</activationId>
  <rule>evaluate package results</rule>
  <declarations>$results=[](7); $p=[newOne, a](1)</declarations>
</org.drools.core.audit.event.ActivationLogEvent>
</object-stream>
