//created on: Jul 4, 2013
package com.sample;

//list any import classes here.
import com.sample.Order
import com.sample.Store
import com.sample.Product
import java.util.ArrayList
import java.*;

//declare any global variables here
rule "Explode Cart"
    agenda-group "init"
    auto-focus true
    salience 100
    dialect "java"
    when
        $order : Order()
        $item : Product() from $order.getProducts()
    then
        insert( $item );
        drools.getKnowledgeRuntime().getAgenda().getAgendaGroup( "first" ).setFocus();
end

rule "filter stock"
	salience 98
	agenda-group "first"
    when    	
    	$item : Product()
    	$store : Store()
    	eval(!$store.containProduct($item))
    then
        retract($store);
end


rule  "Mininum Packagethreshold0"
    when
        $o : Order()
        $i : Product( ((size bigger 4))&& (( productID == 1 ))) from $o.getProducts()
    then
        $i.minPackage();
end


rule  "30"
    salience 848
    when
        $order : Orders()
        $orderE : OrderE()
        $product : Product($id: prodId, sku.equals("1"))
        eval ($orderE.getProductQty($id) >500)
        $s : Store( storeId == s1)
        eval(InventoryDAO.getInstance().checkProduct($s, $product, "<", $orderE.getProductQty($id)))
    then
        System.out.println("special routes for product "+$product.getProdName()+" with quantity "+$orderE.getProductQty($id)+" is successfully allocated");
        PackageE p = new PackageE($order);
        p.addProduct($product);
        insert (p);
        p.setAllocated(true); 
        retract($product);
end

rule  "30"
    salience 846
    when
        $order : Orders()
        $orderE : OrderE()
        $product : Product($id: prodId, sku.equals("1"))
        eval ($orderE.getProductQty($id) >555)
        $s : Store( storeId == s1)
        eval(InventoryDAO.getInstance().checkProduct($s, $product, "<", $orderE.getProductQty($id)))
    then
        System.out.println("special routes for product "+$product.getProdName()+" with quantity "+$orderE.getProductQty($id)+" is successfully allocated");
        PackageE p = new PackageE($order);
        p.addProduct($product);
        insert (p);
        p.setAllocated(true); 
        retract($product);
end

rule  "30"
    salience 844
    when
        $order : Orders()
        $orderE : OrderE()
        $product : Product($id: prodId, sku.equals("1"))
        eval ($orderE.getProductQty($id) >500)
        $s : Store( storeId == s1)
        eval(InventoryDAO.getInstance().checkProduct($s, $product, "<", $orderE.getProductQty($id)))
    then
        System.out.println("special routes for product "+$product.getProdName()+" with quantity "+$orderE.getProductQty($id)+" is successfully allocated");
        PackageE p = new PackageE($order);
        p.addProduct($product);
        insert (p);
        p.setAllocated(true); 
        retract($product);
end

rule  "30"
    salience 844
    when
        $order : Orders()
        $orderE : OrderE()
        $product : Product($id: prodId, sku.equals("1"))
        eval ($orderE.getProductQty($id) >800)
        $s : Store( storeId == s1)
        eval(InventoryDAO.getInstance().checkProduct($s, $product, "<", $orderE.getProductQty($id)))
    then
        System.out.println("special routes for product "+$product.getProdName()+" with quantity "+$orderE.getProductQty($id)+" is successfully allocated");
        PackageE p = new PackageE($order);
        p.addProduct($product);
        insert (p);
        p.setAllocated(true); 
        retract($product);
end

rule "summarize"   
salience -5
    when
        store : Store()
    then
        System.out.println(store.getZoneID());
end

